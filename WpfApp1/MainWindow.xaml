<Window x:Class="WpfApp1.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfApp1"
        mc:Ignorable="d" MouseLeftButtonDown="Window_MouseLeftButtonDown"
        WindowStyle="None"
        Background="Transparent"
        AllowsTransparency="True"
        Title="MainWindow" Height="900" Width="1020" MaxHeight="970" MaxWidth="1020">
    <Window.Resources>
        <SolidColorBrush x:Key="ListBox.Static.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="Transparent"/>
        <Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="Transparent"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>


    <Border CornerRadius="20" Background="Black">

        <Grid>

            <Grid.RowDefinitions>

                <RowDefinition></RowDefinition>
                <RowDefinition Height="770"></RowDefinition>

            </Grid.RowDefinitions>

            <ListBox Background="Transparent" Grid.Row="1" Margin="5,0,10,0" MouseRightButtonUp="list_MouseRightButtonUp"  MouseLeftButtonUp="FirstClick" Name="list"  ScrollViewer.VerticalScrollBarVisibility="Hidden" ScrollViewer.HorizontalScrollBarVisibility="Hidden" Style="{DynamicResource ListBoxStyle1}">


                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid HorizontalAlignment="Left" VerticalAlignment="Top" Columns="10"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>

            </ListBox>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">


                <Border CornerRadius="20" Margin="0,10,15,0" Grid.Row="0" Width="200" Height="100">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
                            <GradientStop Color="Red" Offset="0"/>
                            <GradientStop Color="White" Offset="1"/>
                        </LinearGradientBrush>
                    </Border.Background>

                    <Grid>

                        <Border HorizontalAlignment="Center" VerticalAlignment="Center" Background="Black" Width="190" Height="90" CornerRadius="20">

                        </Border>

                        <TextBlock Name="Time" Margin="0,0,0,10" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="DarkRed" Text="000" FontSize="90" FontWeight="ExtraBlack"></TextBlock>

                    </Grid>



                </Border>

            </StackPanel>


            <StackPanel Orientation="Vertical">

                <StackPanel Height="85" Background="Transparent" Orientation="Horizontal" HorizontalAlignment="Left">

                    <Button Background="Transparent" Height="75" Margin="20,0,0,20" Style="{DynamicResource ButtonStyle1}">

                        <Image Source="Icon/menu.png" Width="32" Height="32" Margin="0,32,0,15"></Image>

                        <Button.Triggers>

                            <EventTrigger RoutedEvent="MouseMove">

                                <BeginStoryboard>

                                    <Storyboard>

                                        <DoubleAnimation
                                    Storyboard.TargetName="Other" 
                                    Storyboard.TargetProperty="Width"
                                    From="{Binding ElementName=EditButton, Path=ActualWidth}"
                                    Duration="0:0:0.2"
                                    To="120"></DoubleAnimation>

                                    </Storyboard>

                                </BeginStoryboard>

                            </EventTrigger>

                            <EventTrigger RoutedEvent="MouseMove">

                                <BeginStoryboard>

                                    <Storyboard>

                                        <DoubleAnimation
                                    Storyboard.TargetName="NewOther" 
                                    Storyboard.TargetProperty="Width"
                                    From="{Binding ElementName=EditButton, Path=ActualWidth}"
                                    Duration="0:0:0.2"
                                    To="120"></DoubleAnimation>

                                    </Storyboard>

                                </BeginStoryboard>

                            </EventTrigger>


                        </Button.Triggers>

                    </Button>


                    <StackPanel Name="NewOther" Width="120">

                        <StackPanel x:Name="Other" Orientation="Horizontal" Width="120">

                            <Button Click="Refresh" Background="Transparent" Style="{DynamicResource ButtonStyle1}">

                                <Image Source="Icon/refresh.png"  Margin="20,28,0,0"></Image>

                            </Button>

                            <Button Click="Button_Click" Background="Transparent" Style="{DynamicResource ButtonStyle1}">

                                <Image Source="Icon/sign-out.png"  Margin="20,28,0,0"></Image>

                            </Button>

                        </StackPanel>

                    </StackPanel>



                </StackPanel>


                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="20,0,0,0">

                    <Image Source="Icon/flag.png" Width="32" Height="32"></Image>
                    <TextBlock Name="FlagCount" Text="x0" Foreground="White" FontSize="20" FontWeight="Bold" Margin="25,0,0,0"></TextBlock>
                    
                </StackPanel>

            </StackPanel>



        </Grid>

        


    </Border>


</Window>
